{
  "manifest": {
    "name": "node-wav",
    "version": "0.0.2",
    "description": "High performance WAV file decoder and encoder",
    "main": "./index.js",
    "scripts": {
      "test": "./node_modules/nodeunit/bin/nodeunit ./tests/test.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/andreasgal/node-wav.git"
    },
    "keywords": [
      "wav",
      "decode"
    ],
    "author": {
      "name": "Andreas Gal"
    },
    "license": "MIT",
    "homepage": "https://github.com/andreasgal/node-wav",
    "engines": {
      "node": ">=4.4.0"
    },
    "dependencies": {},
    "devDependencies": {
      "nodeunit": "^0.9.1",
      "wav-decoder": "^1.1.0",
      "wav-encoder": "^1.1.0"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-node-wav-0.0.2-89cb63cf8cd66ec8ab455f5ba4864e5fcb4605e8-integrity/node_modules/node-wav/package.json",
    "readmeFilename": "README.md",
    "readme": "node-wav\n========\n\nHigh performance WAV decoder and encoder. The decoder is up to 750x faster than\nthe 'wav-decoder' npm module.\n\nIn addition, in contrast to 'wav-decoder' the result is returned directly instead\nof with a promise.\n\nThis module combines the functionality of 'wav-decoder' and 'wav-encoder'.\n\nUsage\n-----\n\n    let fs = require('fs');\n    let wav = require('node-wav');\n\n    let buffer = fs.readFileSync('file.wav');\n    let result = wav.decode(buffer);\n    console.log(result.sampleRate);\n    console.log(result.channelData); // array of Float32Arrays\n\n    wav.encode(result.channelData, { sampleRate: result.sampleRate, float: true, bitDepth: 32 });\n\nData format\n-----------\n\nData is always returned as Float32Arrays. While reading and writing 64-bit float\nWAV files is supported, data is truncated to 32-bit floats.\n\nEndianness\n----------\n\nThis module assumes a little endian CPU, which is true for pretty much every processor\nthese days (in particular Intel and ARM)."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/node-wav/-/node-wav-0.0.2.tgz#89cb63cf8cd66ec8ab455f5ba4864e5fcb4605e8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/node-wav/-/node-wav-0.0.2.tgz",
    "hash": "89cb63cf8cd66ec8ab455f5ba4864e5fcb4605e8",
    "integrity": "sha512-M6Rm/bbG6De/gKGxOpeOobx/dnGuP0dz40adqx38boqHhlWssBJZgLCPBNtb9NkrmnKYiV04xELq+R6PFOnoLA==",
    "registry": "npm",
    "packageName": "node-wav",
    "cacheIntegrity": "sha512-M6Rm/bbG6De/gKGxOpeOobx/dnGuP0dz40adqx38boqHhlWssBJZgLCPBNtb9NkrmnKYiV04xELq+R6PFOnoLA== sha1-ictjz4zWbsirRV9bpIZOX8tGBeg="
  },
  "registry": "npm",
  "hash": "89cb63cf8cd66ec8ab455f5ba4864e5fcb4605e8"
}